<?php

/**
 * @file
 * Primary module hooks for Frontify module.
 */

/**
 * Implements hook_theme().
 */
function frontify_theme(): array {
  return [
    'frontify_image_formatter' => [
      'variables' => [
        'uri' => NULL,
        'alt' => NULL,
        'width' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function frontify_preprocess_views_view(&$variables) {
  // Gutenberg just requires the media library view to be present in the DOM
  // when using Frontify. This keeps the UI consistent with the default
  // Drupal Media entity reference field.
  // The MediaLibraryUiBuilder::buildLibraryContent()
  // appends  $view_request->query->add($state->all()), so we can
  // identify the opener and the media type.
  if (
    $variables['view']->id() === 'media_library' &&
    $variables['view']->current_display === 'widget'
  ) {
    $isGutenbergOpener = str_contains($variables['rows']['#action'], 'media_library_opener_id=gutenberg.media_library.opener');
    // @todo generalize to other Frontify media types.
    $isFrontifyMediaType = str_contains($variables['rows']['#action'], 'media_library_selected_type=frontify_image');
    if ($isFrontifyMediaType && $isGutenbergOpener) {
      $variables['attributes']['class'][] = 'visually-hidden';
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function frontify_media_presave(\Drupal\media\MediaInterface $media) {
  if ($media->bundle() === 'frontify') {
    $config = $media->getSource()->getConfiguration();

    $warmImageStyles = !empty($media_type_configuration['warm_image_styles']) && $media_type_configuration['warm_image_styles'] === 1;
    $warmImageStyleOptions = !empty($media_type_configuration['warm_image_styles_options']) ? $media_type_configuration['warm_image_styles_options'] : [];

    $url = $media->get($config['source_field'])->uri;
    if ($warmImageStyles) {
      /** @var \Drupal\frontify\FrontifyUtils $frontifyUtils */
      $frontifyUtils = \Drupal::service('frontify.utils');
      $frontifyUtils->warmImageStyles($url, $warmImageStyleOptions);
    }
  }
}
